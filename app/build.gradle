apply plugin: 'com.android.application'

description "A template project to build Android applications using SDL2"
version "0.1"

// given current dir, build type and abi, returns the absolute path of the sdl2 lib
def sdlLibPath = { moduleDir, buildType, targetAbi ->
    return "${moduleDir}/build/intermediates/cmake/${buildType}/obj/${targetAbi}/libSDL2-2.0.so"
}

def moduleDir = buildscript.sourceFile.getParent()
def abiName = "armeabi-v7a"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "io.github.morbo84.sdl2gradleexample"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
          // Specifies the ABI configurations of your native
          // libraries Gradle should build and package with your APK.
          abiFilters abiName
        }
    }

    // these cmake args are in common for all build variants
    def cmakeArguments = ["-DANDROID_NDKDIR=${android.ndkDirectory}",
                         "-DSDL2_INCLUDE_DIR=${moduleDir}/src/main/cpp/SDL/include"]

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            def buildType = name
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_NDKDIR=${android.ndkDirectory}",
                              "-DSDL2_INCLUDE_DIR=${moduleDir}/src/main/cpp/SDL/include",
                              "-DSDL2_SHARED_LIB_PATH=${sdlLibPath(moduleDir, buildType, abiName)}" // TODO: abi hardcoded
                }
            }
        }
        debug {
            def buildType = name
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_NDKDIR=${android.ndkDirectory}",
                              "-DSDL2_INCLUDE_DIR=${moduleDir}/src/main/cpp/SDL/include",
                              "-DSDL2_SHARED_LIB_PATH=${sdlLibPath(moduleDir, buildType, abiName)}" // TODO: abi hardcoded
                }
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}
